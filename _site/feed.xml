<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TrozWare</title>
    <description>Mac &amp;amp; iOS Developer</description>
    <link>http://troz.net/</link>
    <atom:link href="http://troz.net/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Testing automation</title>
        <description>&lt;p&gt;Today I am experimenting with automating post generation.&lt;/p&gt;

&lt;p&gt;Firstly, there is the structure of the post Markdown document, which really boils down to the file name and the header.&lt;/p&gt;

&lt;p&gt;I have set up a macro in &lt;a href=&quot;http://www.ergonis.com/products/typinator/&quot;&gt;Typinator&lt;/a&gt; so that I just type the title of the post in a text document. I copy that title to the clipboard and type the shortcut. The header is then created with the title and the formatted permalink.&lt;/p&gt;

&lt;p&gt;To save the document, I use another Typinator snippet to convert the title (still in the clipboard) to lower case and to replace the spaces in the title with dashes.&lt;/p&gt;

&lt;p&gt;For starting the local Jekyll server, I have turned to an &lt;a href=&quot;http://www.alfredapp.com&quot;&gt;Alfred&lt;/a&gt; workflow. I have two actions in the workflow. One opens Terminal, cd&amp;rsquo;s to my site folder and runs the command to start the local Jekyll server. The second opens my default browser to the local Jekyll test address.&lt;/p&gt;

&lt;p&gt;Both these actions happen simultaneously so the browser usually fails until refreshed.
The server is left running in Terminal so I can shut it down when finished testing.&lt;/p&gt;

&lt;p&gt;After writing the post, the final stage is to publish, so I need to work out the commands for doing a git commit and push. Then I should be able to automate those tasks.&lt;/p&gt;

&lt;p&gt;Testing the git commands using Terminal, I have come up with the following sequence:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git add .
git commit -a -m &amp;quot;Commit message here&amp;quot;
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The commit message could be the title of the post, so I need a way to construct the command and then execute it. Typinator is good at text manipulation, so I constructed another macro that takes the clipboard, uses it as the commit message and performs the git commands. This gave a good commit message, but the actual commit failed, so that was no use.&lt;/p&gt;

&lt;p&gt;So then I went back to Alfred and created a workflow there with a series of Terminal commands to perform the actions above. This only allows a generic commit message, but it works as expected.&lt;/p&gt;

&lt;p&gt;So there is still room for improvement, but with a set of macros, I can automate a lot of the standard text entry, which is always good for reducing errors.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The sequence now is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open the text editor and type the title of the post.&lt;/li&gt;
&lt;li&gt;Cut this into the clipboard.&lt;/li&gt;
&lt;li&gt;Run the Typinator macro to fill in the post header.&lt;/li&gt;
&lt;li&gt;Save the post file, using the Typinator macro to construct the file name.&lt;/li&gt;
&lt;li&gt;Write the post, then use an Alfred workflow to test it locally.&lt;/li&gt;
&lt;li&gt;When ready, use an Alfred workflow to publish.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;
</description>
        <pubDate>Thu, 12 Mar 2015 00:00:00 +1000</pubDate>
        <link>http://troz.net/testing-automation/</link>
        <guid isPermaLink="true">http://troz.net/testing-automation/</guid>
      </item>
    
      <item>
        <title>Workflow for writing a post</title>
        <description>&lt;p&gt;So here is where I need to get used to Jekyll and how things are done.
I will end up automating this when I am sure of the process, but for now, I am just going to work my way through it.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Start up the local Jekyll server:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I opened Terminal and used &lt;code&gt;cd&lt;/code&gt; to get to the folder containing my site.&lt;/li&gt;
&lt;li&gt;Next I started the Jekyll server locally using &lt;code&gt;jekyll serve&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;This gave me the address of the local server - in my case &lt;code&gt;http://127.0.0.1:4000/&lt;/code&gt; - so I went there in my browser to see the default page.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;My goal is to write a new blog post (this one in fact).&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For advice on creating a new post, I went to the &lt;a href=&quot;http://jekyllrb.com/docs/posts/&quot;&gt;Jekyll docs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Jekyll needs the file name to be a specific format which includes the date and title.&lt;/li&gt;
&lt;li&gt;Looking in the &lt;code&gt;_posts&lt;/code&gt; folder of the site folder, I see the previous post file is titled &lt;code&gt;2015-03-08-new-site-for-trozware.md&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;As it is now 10th March 2015, I am saving this file as: &lt;code&gt;2015-03-10-workflow-for-writing-a-post.md&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Saving at this point shows a Jekyll error in the Terminal, but the next stage will fix that.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Front matter:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jekyll specifies that each file must have a &lt;a href=&quot;http://jekyllrb.com/docs/frontmatter/&quot;&gt;front matter block&lt;/a&gt; in a certain format.&lt;/li&gt;
&lt;li&gt;The header has certain essential parameters and then more optional ones.&lt;/li&gt;
&lt;li&gt;My site was imported from WordPress, so the older posts contain several header parameters that may not be necessary any more.&lt;/li&gt;
&lt;li&gt;Look at the screen shot below to see what I have in this post file:&lt;/li&gt;
&lt;li&gt;After saving, I see this entry in my Terminal:&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Regenerating: 1 file(s) changed at 2015-03-10 13:50:40 ...done in 0.421789 seconds.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Now I can see the title and the start of the post on my first page and when clicking on it, I can see all the text.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Adding an image:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is not really necessary for this post, but I wanted to document it as part of the workflow.&lt;/li&gt;
&lt;li&gt;I wanted to show the front matter and start of this post, so I took a screen shot of the top of my editor window.&lt;/li&gt;
&lt;li&gt;Then I renamed the image file and moved it into the &lt;code&gt;images&lt;/code&gt; folder of my site.&lt;/li&gt;
&lt;li&gt;Now to embed the image using this Markdown: &lt;code&gt;![Post header][2]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;As you can see, I prefer to group all links (images &amp;amp; URLs) at the end of the document and keep the body of the text as clean as possible.&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;/images/post_header.png&quot; alt=&quot;Post header&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Proofing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now that I have the text of my post, I need to proof-read it from the local Jekyll server.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;jekyll serve&lt;/code&gt; command running in Terminal keeps the pages up-to-date as you edit, but you will need to refresh your page in the browser manually to check your changes.&lt;/li&gt;
&lt;li&gt;And I have found that if you make a major change to the site e.g. a CSS file or a config file, then it is best to stop the Jekyll server and start it again to make it re-build all the files.&lt;/li&gt;
&lt;li&gt;To be completely sure, stop the server and run &lt;code&gt;jekyll build&lt;/code&gt; in Terminal although this may only do what &lt;code&gt;jekyll serve&lt;/code&gt; does on startup anyway.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Publishing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now it is time to publish.&lt;/li&gt;
&lt;li&gt;As I am using GitHub Pages to host, the site files are all part of a single Git repository.&lt;/li&gt;
&lt;li&gt;And as I understand it, the data &lt;strong&gt;must&lt;/strong&gt; be in the &lt;code&gt;master&lt;/code&gt; branch.&lt;/li&gt;
&lt;li&gt;Opening up the GitHub client, I see that my repository has a bunch of changes:

&lt;ul&gt;
&lt;li&gt;the file I am working on&lt;/li&gt;
&lt;li&gt;the image I inserted&lt;/li&gt;
&lt;li&gt;feed.xml&lt;/li&gt;
&lt;li&gt;index.html files for each page&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;This is as expected, since all pages are pre-generated when using Jekyll, so pages of posts must be re-rendered when a new post is added to the top.&lt;/li&gt;
&lt;li&gt;Note that several of the files appear twice: once from where they are edited and once from the _site folder which serves them.&lt;/li&gt;
&lt;li&gt;Just two simple steps now, using the GitHub client:

&lt;ol&gt;
&lt;li&gt;Commit&lt;/li&gt;
&lt;li&gt;Sync&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;And that&amp;rsquo;s it. My new post is online and ready for reading.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This was my first post after the one I wrote when setting up, so the first real post.&lt;/li&gt;
&lt;li&gt;While there appear to be a lot of steps, none of them are difficult.&lt;/li&gt;
&lt;li&gt;But I do have 4 apps running to do it:

&lt;ol&gt;
&lt;li&gt;TextWrangler for editing&lt;/li&gt;
&lt;li&gt;Terminal to run the local Jekyll server&lt;/li&gt;
&lt;li&gt;Safari to check the finished post&lt;/li&gt;
&lt;li&gt;GitHub to commit and upload&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Automating this is an obvious next step, so stay tuned&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 10 Mar 2015 00:00:00 +1000</pubDate>
        <link>http://troz.net/workflow-for-writing-a-post/</link>
        <guid isPermaLink="true">http://troz.net/workflow-for-writing-a-post/</guid>
      </item>
    
      <item>
        <title>New Site for TrozWare</title>
        <description>&lt;h3 id=&quot;welcome-to-trozware&amp;#39;s-new-site.&quot;&gt;Welcome to TrozWare&amp;rsquo;s new site.&lt;/h3&gt;

&lt;p&gt;It appears that I am not alone in deciding to move away from WordPress. WordPress is great - easy to set up and with lots of cool themes to allow customisation of your site. But it is slow, especially if (like me) you are running on a low-cost shared server.&lt;/p&gt;

&lt;p&gt;I had been reading about &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;, so I decide to give it a go and also host my site on &lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub&lt;/a&gt;, taking advantage of their faster servers.&lt;/p&gt;

&lt;p&gt;I followed the advice given by &lt;a href=&quot;http://www.girliemac.com/blog/2013/12/27/wordpress-to-jekyll/&quot;&gt;Girlie Mac&lt;/a&gt; and performed the migration from my self-hosted WordPress site. I am using the &lt;a href=&quot;http://pixyll.com&quot;&gt;Pixyll&lt;/a&gt; theme by &lt;a href=&quot;http://johnotander.com&quot;&gt;John Otander&lt;/a&gt; with a few tweaks of my own.
The site is much faster to load, and I am hoping that the easier editing will inspire me to write more posts.&lt;/p&gt;

&lt;p&gt;Of course it wasn&amp;rsquo;t all positive. WordPress did give me some features I liked, but I think overall the result is better.&lt;/p&gt;

&lt;h4 id=&quot;wordpress:&quot;&gt;WordPress:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;WordPress gave me a full LAMP stack, so I could run my own PHP scripts.&lt;/li&gt;
&lt;li&gt;WordPress gave me a search function.&lt;/li&gt;
&lt;li&gt;Commenting was built-in.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;jekyll:&quot;&gt;Jekyll:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Jekyll builds the pages out as static HTML, so all pages are pre-generated for fast loading.&lt;/li&gt;
&lt;li&gt;Writing for Jekyll is pure Markdown so it is easier to write and preview locally.&lt;/li&gt;
&lt;li&gt;Some of the things I needed a plugin for in WordPress can be done natively in Jekyll:

&lt;ul&gt;
&lt;li&gt;tables&lt;/li&gt;
&lt;li&gt;syntax-highlighting&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For comments, I have switched to &lt;a href=&quot;https://disqus.com&quot;&gt;Disqus&lt;/a&gt;, but I am not sure about it yet. I will evaluate over the next few weeks. In WordPress, I used a plugin to handle the spam that inevitably arrived. I am hoping that Disqus will protect me from that, but I have to see how good a job it does and whether the few real comments are worth it.
A better option might be to turn off comments completely and just have a contact form (which I have added using &lt;a href=&quot;http://formspree.io&quot;&gt;Formspree&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Working in Markdown is great. I love how I can have a really clean look in my editor and still end up with well formatted HTML. I use Coda 2 on my Mac as my standard web editor, so that is what I am writing in now. I will probably experiment with other Markdown editors as I go. And for any Mac users out there working in Markdown, I highly recommend &lt;a href=&quot;http://brettterpstra.com/projects/markdown-service-tools/&quot;&gt;Brett Terpstra&amp;rsquo;s Markdown Service Tools&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I couldn&amp;rsquo;t get  Disqus to apply the old comments to the posts on this new site, and given the low volume of legitimate comments, I have decided to turn off commenting. If anyone wants to say something, use the Contact link at the top right to send me a message and I will add it to the post if required.&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Mar 2015 00:00:00 +1000</pubDate>
        <link>http://troz.net/new-site-for-trozware-2015/</link>
        <guid isPermaLink="true">http://troz.net/new-site-for-trozware-2015/</guid>
      </item>
    
      <item>
        <title>World Time In Words</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://itunes.apple.com/au/app/time-in-words/id509085586?mt=8&quot; target=&quot;_blank&quot;&gt;World Time In Words version 3.0&lt;/a&gt; is now available in the Mac App Store.&lt;/p&gt;

&lt;p&gt;With version 3.0 of this app, I have changed the name to &amp;#8220;World Time In Words&amp;#8221;. This is to reflect what I feel to be the most useful feature of this app: the ability to convert between time zones.&lt;/p&gt;

&lt;p&gt;It has two other new features:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The time shown in the menu bar can now be set to use 24-hour time. Go to Preferences to change this.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;If you temporarily need to see the time in digital format, hold down Option when opening the menu.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And there is one other thing in this version that I am almost too embarrassed to mention: after using this app for about two years, it was finally pointed out to me that the 3rd of every month was being shown as the &amp;#8220;3th&amp;#8221;. Oh dear &amp;#8211; it was a copy-paste error but I should I found it a long time ago.&lt;/p&gt;

&lt;p&gt;As always, please let me know if you have any suggestions for future versions.&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Feb 2015 00:00:00 +1000</pubDate>
        <link>http://troz.net/world-time-in-words/</link>
        <guid isPermaLink="true">http://troz.net/world-time-in-words/</guid>
      </item>
    
      <item>
        <title>Man Reader 1.4 Now Available</title>
        <description>&lt;p&gt;&lt;a href=&quot;/manreader/&quot;&gt;Man Reader 1.4&lt;/a&gt; is now available through the &lt;a href=&quot;http://itunes.apple.com/app/man-reader/id522583774?mt=12&quot;&gt;Mac App Store&lt;/a&gt;.&lt;/p&gt;

&lt;h5 id=&quot;the-new-features-and-fixes-are:&quot;&gt;The new features and fixes are:&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Fix for plain text view not wrapping correctly for odd-sized fonts.&lt;/li&gt;
&lt;li&gt;Fix for HTML text view over-riding font colors that may be invisible.&lt;/li&gt;
&lt;li&gt;Search for missing entry (e.g. g++) no longer requires Enter or Return.&lt;/li&gt;
&lt;li&gt;Better automatic selection of matching entries while searching.&lt;/li&gt;
&lt;li&gt;Fix for animation warning message appearing in Console.&lt;/li&gt;
&lt;li&gt;Status display shows when man page list is being updated.&lt;/li&gt;
&lt;li&gt;Searching inside a page now allows a minimum of 2 characters (was 3), so flags&lt;br&gt;
e.g. ‘-b’ do not need to be escaped.&lt;/li&gt;
&lt;li&gt;Fixed path for Network Utility in tool bar (moved in OS X 10.9).&lt;/li&gt;
&lt;li&gt;More information available about the effects of sand-boxing for this app.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the first time, Man Reader is now also available as a &lt;a href=&quot;https://pay.paddle.com/checkout/490552&quot;&gt;direct purchase&lt;/a&gt;.&lt;br&gt;
You can also download a &lt;a href=&quot;/manreader-paddle/ManReader.zip&quot;&gt;7 day free trial&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The reason for selling Man Reader outside the App Store is to avoid Apple&amp;#8217;s sandboxing restrictions, which may reduce the number of man pages that Man Reader is able to display. For more information about this problem, read &lt;a href=&quot;/manreader-sandbox/&quot;&gt;Sand-boxing Man Reader&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have already purchased Man Reader from the App Store, but would like to have a non-sandboxed version, go to &lt;a href=&quot;/man-reader-no-sb/&quot;&gt;Man Reader (no SB)&lt;/a&gt; for more information on how to download a non-sandboxed version that will use your App Store licence.&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Apr 2014 00:00:00 +1000</pubDate>
        <link>http://troz.net/man-reader-1-4-now-available/</link>
        <guid isPermaLink="true">http://troz.net/man-reader-1-4-now-available/</guid>
      </item>
    
      <item>
        <title>Email clients for Mac &amp;#038; iOS</title>
        <description>&lt;p&gt;Some people are moving away from email, but for me, it remains the best way to communicate online. I get to keep a record of conversations and the attached files are with the text so I can always see the context.&lt;/p&gt;

&lt;p&gt;But I think everyone would agree that Apple have dropped the ball with Mail in OS X Mavericks, and to a lesser extent, in iOS 7.&lt;/p&gt;

&lt;p&gt;So I have been on a campaign lately to find an email client that suits my needs. I don&amp;#8217;t feel that I have found the perfect answer yet, but I am getting there.&lt;/p&gt;

&lt;p&gt;The first step was to work out what I really needed in an email client:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;support for IMAP accounts and Gmail accounts&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;unified inbox &amp;#8211; all accounts shown together&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;conversation threading&lt;/li&gt;
&lt;li&gt;support for POP accounts (optional)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;On the Mac, I have narrowed it down to two clients that I am swapping between every few days: &lt;a href=&quot;https://www.uniboxapp.com&quot; target=&quot;_blank&quot;&gt;Unibox&lt;/a&gt; and &lt;a href=&quot;http://airmailapp.com&quot; target=&quot;_blank&quot;&gt;Airmail&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Unibox is different in the way it displays your emails. It is much more focussed on people and conversations, so the side bar shows all the people who you have sent emails to or received emails from, grouped by date. I really like the merging of incoming &amp;amp; outgoing emails, but it can be a bit weird if you delete the latest email from someone who then disappears from sight.&lt;/p&gt;

&lt;p&gt;Emails are grouped by a single person, not by conversation. There is a button on appropriate emails to toggle conversation view for that particular thread, but it doesn&amp;#8217;t stick.&lt;/p&gt;

&lt;p&gt;In order to show a conversation, they truncate emails in the main part of the window and show a &amp;#8220;More&amp;#8221; button at the bottom of the email to expand it. This was annoying, but in the latest beta, it performs much better, so you are not continually tapping this to see a long email.&lt;/p&gt;

&lt;p&gt;Airmail has a more conventional display. Threading and the layout of threaded emails are both very nice. There are multiple view options, which I find can get a bit messy looking, so I prefer the &amp;#8220;Minimized View&amp;#8221; setting. Airmail also does POP accounts which is a plus.&lt;/p&gt;

&lt;p&gt;The main reason I keep going back to Unibox is the unification. I have grown to like having sent and received messages all in the same window without having to go and find them somewhere else.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;On the iPad, I am currently using &lt;a href=&quot;http://www.getboxer.com&quot; target=&quot;_blank&quot;&gt;Boxer&lt;/a&gt; and have tried numerous others. &lt;a href=&quot;http://www.moltoapp.com/&quot; target=&quot;_blank&quot;&gt;Molto&lt;/a&gt; was quite good and the interface was fun, but it would only use landscape mode and like to be able to swap. Boxer is not great in portrait mode, but it does work.&lt;/p&gt;

&lt;p&gt;So the jury is still out for iPad email clients, but on the Mac, I am leaning towards Unibox.&lt;/p&gt;
</description>
        <pubDate>Tue, 25 Mar 2014 00:00:00 +1000</pubDate>
        <link>http://troz.net/email-clients-for-mac-ios/</link>
        <guid isPermaLink="true">http://troz.net/email-clients-for-mac-ios/</guid>
      </item>
    
      <item>
        <title>Berio Sequenza VII</title>
        <description>&lt;p&gt;So my latest app is way outside my usual sphere but that&amp;#8217;s what happens when family decide that what you do might actually be useful!&lt;/p&gt;

&lt;p&gt;My son is an oboist and he is currently learning Berio&amp;#8217;s Sequenza VII for Oboe. This is a weird piece without a standard time signature. Instead each line has 13 bars with each bar being allocated a certain time span in actual seconds. As can easily be imagined, this makes learning and practicing this piece more of a mathematical exercise than a musical one.&lt;/p&gt;

&lt;p&gt;So I wrote him an app to sound out the end of each bar. Once he and his teacher used it, a few more features crept in and now I think it will be of great assistance to any student or teacher trying to work on this piece.&lt;/p&gt;

&lt;p&gt;While I doubt that many oboists frequent this web site, it anyone who does can pass this on to any oboist, I would be very grateful, and I think the oboist would be too!&lt;/p&gt;

&lt;p&gt;The app is available through the &lt;a href=&quot;https://itunes.apple.com/us/app/sequenza-vii/id730234638?mt=8&amp;#038;uo=4&quot; target=&quot;_blank&quot;&gt;iTunes App Store&lt;/a&gt;.&lt;br&gt;
More details are on &lt;a href=&quot;/berio/&quot; title=&quot;Berio’s Sequenza VII&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 07 Nov 2013 00:00:00 +1000</pubDate>
        <link>http://troz.net/berio-sequenza-vii/</link>
        <guid isPermaLink="true">http://troz.net/berio-sequenza-vii/</guid>
      </item>
    
      <item>
        <title>Icon Builder &amp;#038; iOS 7</title>
        <description>&lt;p&gt;Icon Builder 1.2 was released on 18 September 2013.&lt;br&gt;
It was an update with 2 new functions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The ability to create images to suit an Xcode 5 assets library &lt;/li&gt;
&lt;li&gt;The ability to create icons with the required sizes for IOS 7 apps. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Knowing that iOS 7 apps can only be built using Xcode 5, I linked the switch for these 2 abilities in a single check box.&lt;br&gt;
The problem was not really that they were in a single checkbox but that I had labelled it badly, so it was not obvious that this was what needed to be checked to create iOS 7 sized icon files.&lt;/p&gt;

&lt;p&gt;After some feedback from early users, it became clear to me that this was not enough. So 1.2.1 is now waiting for Apple&amp;#8217;s approval.&lt;br&gt;
The changes in this version are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;More informative labelling of the checkbox. &lt;/li&gt;
&lt;li&gt;The checkbox is checked by default is Xcode 5 is installed &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While waiting for the new version to be approved, please be aware that iOS 7 icon sizes will only be generated if you select &amp;#8220;Check Assets (for Xcode 5.x or later)&amp;#8221;&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Sep 2013 00:00:00 +1000</pubDate>
        <link>http://troz.net/icon-builder-ios-7/</link>
        <guid isPermaLink="true">http://troz.net/icon-builder-ios-7/</guid>
      </item>
    
      <item>
        <title>Icon apps updated</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://itunes.apple.com/au/app/icns-maker/id550942266?mt=12&quot; target=&quot;_blank&quot;&gt;Icns Maker&lt;/a&gt; and &lt;a href=&quot;https://itunes.apple.com/au/app/icon-builder/id552293482?mt=12&quot; target=&quot;_blank&quot;&gt;Icon Builder&lt;/a&gt; have both just been updated to support Xcode 5.&lt;/p&gt;

&lt;p&gt;Icon Builder is a Mac app that takes your images and creates all the required icon files for use in your iOS apps.&lt;br&gt;
It now supports Xcode 5&amp;#8217;s image assets folders and if you are using Xcode 5, it will create the icon sizes required for iOS 7 app.&lt;/p&gt;

&lt;p&gt;Icns Maker is a Mac app that takes your images and creates icons for use in your Mac apps.&lt;br&gt;
For Xcode 4 or earlier, it creates a .icns file.&lt;br&gt;
For Xcode 5, it creates a folder of images for use in your project&amp;#8217;s image assets folder.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Sep 2013 00:00:00 +1000</pubDate>
        <link>http://troz.net/icon-apps-updated/</link>
        <guid isPermaLink="true">http://troz.net/icon-apps-updated/</guid>
      </item>
    
      <item>
        <title>Markdown</title>
        <description>&lt;p&gt;For some time now, I have been aware of the increasing trend towards using Markdown for text editing and for creating HTML. Markdown has been on my list of &amp;#8220;things I should learn some day&amp;#8221; so I was interested last week to read about a new iBooks book called &lt;a href=&quot;http://macsparky.com/markdown&quot;&gt;The MacSparky Markdown Field Guide&lt;/a&gt;. This was sufficient inspiration so I got the book and read through it this weekend.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://static.squarespace.com/static/5008676d84aeae82b8acdd8c/t/5147c7a6e4b0d224b4419401/1363658669971/Markdown%20Cover%20Art%20-%20JPG.jpg?format=500w&quot; alt=&quot;The MacSparky Markdown Field Guide&quot;&gt;&lt;/p&gt;

&lt;p&gt;Actually, to say that I &lt;em&gt;read&lt;/em&gt; through the book is a mis-representation. The book was written using iBooks Author specially for the iPad and contains screen casts and interviews as well as text. But by the end of it, I now feel I have a basic understanding on Markdown and the ways in which I can use it.&lt;/p&gt;

&lt;p&gt;I guess the really big thing about using Markdown is that is creates plain text files that are human-readable even without being converted to HTML. This makes them future-proof since they are not tied to a proprietary file format that may cease to exist at any time.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;using-markdown:&quot;&gt;Using Markdown:&lt;/h2&gt;

&lt;p&gt;Since this web site is a self-hosted WordPress site, my next step was to look for a WordPress plugin that would allow me to use Markdown to create my posts. I could have used a Markdown editor that had HTML export, but I wanted to try something that would eliminate the extra step. The first one I decide to try was &lt;a href=&quot;http://wordpress.org/extend/plugins/markdown-on-save-improved/&quot;&gt;Markdown on Save Improved&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One of the main reasons for choosing this one was that it stores the posts as both Markdown and as HTML. This saves time when going back to edit a post, avoids the constant changes that creep in when converting between formats all the time, and makes it so that the post will still display correctly even if Markdown is no longer supported. The only problem I have found so far is that it doesn&amp;#8217;t automatically create links &amp;amp; image links using the Markdown format, but uses standard &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; links instead.&lt;/p&gt;

&lt;p&gt;My next stop, since I always use a Mac, was to get Brett Terpstra&amp;#8217;s collection of &lt;a href=&quot;http://brettterpstra.com/projects/markdown-service-tools/&quot;&gt;Services for Markdown&lt;/a&gt;. These add a lot on convenient shortcuts: one of my favourites is the ability to convert inline links to references links for increased readability while editing.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;first-impressions:&quot;&gt;First Impressions:&lt;/h2&gt;

&lt;p&gt;So having written this first post in Markdown, how do I feel about it? I haven&amp;#8217;t really tried anything too weird this time, but there are a few things that were very easy to do. Particularly in the paragraph where I was talking about links &amp;amp; images and wanted to include the tags as text without having it interpreted as HTML. All I had to do was surround the text with back-ticks.&lt;/p&gt;

&lt;p&gt;Links are vastly easier to manage and edit in Markdown. I miss the ability to specify that links should open in a new tab &amp;#8211; I prefer to have that setting for links that take you outside my web site, but the modern theories on usability seem to be heading towards deprecation of this feature, so I may just stop using it.&lt;/p&gt;

&lt;p&gt;With the standard WordPress editor, I always felt that I was fighting it. I had to swap between the visual &amp;amp; HTML editor tabs and when I swapped tabs, things would sometimes change without me doing anything. So far, I feel more in control using Markdown and although I have lost the WYSIWYG visual editor, I no longer have to wade through the HTML editor to get the effect I want or to remove the results of a few careless clicks.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what-next?&quot;&gt;What next?&lt;/h2&gt;

&lt;p&gt;Some of the things on my wish list would be solved by a better editor and some by more powerful syntax.&lt;/p&gt;

&lt;p&gt;Editor:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adding links &amp;#038; images using Markdown style instead of HTML&lt;/li&gt;
&lt;li&gt;Being able to create lists 

&lt;ul&gt;
&lt;li&gt;Markdown makes this very easy but this WP plugin does not support lists as far as I can tell&lt;/li&gt;
&lt;li&gt;So these lists are in HTML&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Syntax:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Alignment of text &amp;#038; images&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using a stand-alone Markdown editor would solve the editor questions, but I wanted to try writing this post completely in WordPress.&lt;br&gt;
And with the alignment, there is nothing to stop me adding CSS to the Markdown.&lt;/p&gt;

&lt;p&gt;Next time, I will test out a different WordPress Markdown editor and see how that goes. I will also test using a standalone editor and exporting its HTML to create a post.&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Apr 2013 00:00:00 +1000</pubDate>
        <link>http://troz.net/markdown/</link>
        <guid isPermaLink="true">http://troz.net/markdown/</guid>
      </item>
    
  </channel>
</rss>
